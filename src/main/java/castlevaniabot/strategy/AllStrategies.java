package castlevaniabot.strategy;

import castlevaniabot.CastlevaniaBot;
import lombok.Value;

@Value
public class AllStrategies {
    private final AxeStrategy AXE;
    private final AxeKnightStrategy AXE_KNIGHT;
    private final BatMovingPlatformStrategy BAT_MOVING_PLATFORM;
    private final BatDualPlatformsStrategy BAT_DUAL_PLATFORMS;
    private final BoneDragonStrategy BONE_DRAGON;
    private final BlackBatStrategy BLACK_BAT;
    private final BlockStrategy BLOCK;
    private final BoomerangDeathStrategy BOOMERANG_DEATH;
    private final BoneStrategy BONE;
    private final BoneTowerStrategy BONE_TOWER;
    private final CandlesStrategy CANDLES;
    private final CookieMonsterStrategy COOKIE_MONSTER;
    private final CrusherStrategy CRUSHER;
    private final DeathHallHolyWaterStrategy DEATH_HALL_HOLY_WATER;
    private final DraculaStrategy DRACULA;
    private final EagleStrategy EAGLE;
    private final FireballStrategy FIREBALL;
    private final FireColumnStrategy FIRE_COLUMN;
    private final FishmanStrategy FISHMAN;
    private final FleamanStrategy FLEAMAN;
    private final FrankensteinStrategy FRANKENSTEIN;
    private final GetCrystalBallStrategy GET_CRYSTAL_BALL;
    private final GetItemStrategy GET_ITEM;
    private final GhostStrategy GHOST;
    private final GhoulStrategy GHOUL;
    private final GiantBatStrategy GIANT_BAT;
    private final GotCrystalBallStrategy GOT_CRYSTAL_BALL;
    private final HolyWaterDeathStrategy HOLY_WATER_DEATH;
    private final JumpMovingPlatformStrategy JUMP_MOVING_PLATFORM;
    private final MedusaStrategy MEDUSA;
    private final MedusaHeadStrategy MEDUSA_HEAD;
    private final MedusaHeadsPitsStrategy MEDUSA_HEADS_PITS;
    private final MedusaHeadsWalkStrategy MEDUSA_HEADS_WALK;
    private final MummiesStrategy MUMMIES;
    private final NoJumpMovingPlatformStrategy NO_JUMP_MOVING_PLATFORM;
    private final PantherStrategy PANTHER;
    private final PhantomBatStrategy PHANTOM_BAT;
    private final RavenStrategy RAVEN;
    private final RedBatDamageBoostStrategy RED_BAT_DAMAGE_BOOST;
    private final RedBatStrategy RED_BAT;
    private final RedBonesStrategy RED_BONES;
    private final RedSkeletonStrategy RED_SKELETON;
    private final SickleStrategy SICKLE;
    private final SkeletonWallStrategy SKELETON_WALL;
    private final SnakeStrategy SNAKE;
    private final SpearKnightStrategy SPEAR_KNIGHT;
    private final UseWeaponStrategy USE_WEAPON;
    private final WaitStrategy WAIT;
    private final WhiteSkeletonStrategy WHITE_SKELETON;
    private final WhipStrategy WHIP;

    public AllStrategies(CastlevaniaBot castlevaniaBot) {
        AXE = new AxeStrategy(castlevaniaBot);
        AXE_KNIGHT = new AxeKnightStrategy(castlevaniaBot);
        BAT_MOVING_PLATFORM = new BatMovingPlatformStrategy(castlevaniaBot);
        BAT_DUAL_PLATFORMS = new BatDualPlatformsStrategy(castlevaniaBot);
        BONE_DRAGON = new BoneDragonStrategy(castlevaniaBot);
        BLACK_BAT = new BlackBatStrategy(castlevaniaBot);
        BLOCK = new BlockStrategy(castlevaniaBot);
        BOOMERANG_DEATH = new BoomerangDeathStrategy(castlevaniaBot);
        BONE = new BoneStrategy(castlevaniaBot);
        BONE_TOWER = new BoneTowerStrategy(castlevaniaBot);
        CANDLES = new CandlesStrategy(castlevaniaBot);
        COOKIE_MONSTER = new CookieMonsterStrategy(castlevaniaBot);
        CRUSHER = new CrusherStrategy(castlevaniaBot);
        DEATH_HALL_HOLY_WATER = new DeathHallHolyWaterStrategy(castlevaniaBot);
        DRACULA = new DraculaStrategy(castlevaniaBot);
        EAGLE = new EagleStrategy(castlevaniaBot);
        FIREBALL = new FireballStrategy(castlevaniaBot);
        FIRE_COLUMN = new FireColumnStrategy(castlevaniaBot);
        FISHMAN = new FishmanStrategy(castlevaniaBot);
        FLEAMAN = new FleamanStrategy(castlevaniaBot);
        FRANKENSTEIN = new FrankensteinStrategy(castlevaniaBot);
        GET_CRYSTAL_BALL = new GetCrystalBallStrategy(castlevaniaBot);
        GET_ITEM = new GetItemStrategy(castlevaniaBot);
        GHOST = new GhostStrategy(castlevaniaBot);
        GHOUL = new GhoulStrategy(castlevaniaBot);
        GIANT_BAT = new GiantBatStrategy(castlevaniaBot);
        GOT_CRYSTAL_BALL = new GotCrystalBallStrategy(castlevaniaBot);
        HOLY_WATER_DEATH = new HolyWaterDeathStrategy(castlevaniaBot);
        JUMP_MOVING_PLATFORM = new JumpMovingPlatformStrategy(castlevaniaBot);
        MEDUSA = new MedusaStrategy(castlevaniaBot);
        MEDUSA_HEAD = new MedusaHeadStrategy(castlevaniaBot);
        MEDUSA_HEADS_PITS = new MedusaHeadsPitsStrategy(castlevaniaBot);
        MEDUSA_HEADS_WALK = new MedusaHeadsWalkStrategy(castlevaniaBot);
        MUMMIES = new MummiesStrategy(castlevaniaBot);
        NO_JUMP_MOVING_PLATFORM = new NoJumpMovingPlatformStrategy(castlevaniaBot);
        PANTHER = new PantherStrategy(castlevaniaBot);
        PHANTOM_BAT = new PhantomBatStrategy(castlevaniaBot);
        RAVEN = new RavenStrategy(castlevaniaBot);
        RED_BAT_DAMAGE_BOOST = new RedBatDamageBoostStrategy(castlevaniaBot);
        RED_BAT = new RedBatStrategy(castlevaniaBot);
        RED_BONES = new RedBonesStrategy(castlevaniaBot);
        RED_SKELETON = new RedSkeletonStrategy(castlevaniaBot);
        SICKLE = new SickleStrategy(castlevaniaBot);
        SKELETON_WALL = new SkeletonWallStrategy(castlevaniaBot);
        SNAKE = new SnakeStrategy(castlevaniaBot);
        SPEAR_KNIGHT = new SpearKnightStrategy(castlevaniaBot);
        USE_WEAPON = new UseWeaponStrategy(castlevaniaBot);
        WAIT = new WaitStrategy(castlevaniaBot);
        WHITE_SKELETON = new WhiteSkeletonStrategy(castlevaniaBot);
        WHIP = new WhipStrategy(castlevaniaBot);
    }
}
